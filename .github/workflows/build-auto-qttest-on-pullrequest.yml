name: Build qttest on pull_request
# DOES NOT CREATE A RELEASE - BUILDS SEAMLY2D.EXE ON VIRTUAL SERVER TO RUN PRE-DEFINED TESTS
# DOES NOT TEST SEAMLYME.EXE

# Trigger on pull requests before merge
on: [ pull_request ]

env:
  QT_SELECT: 5
  QT_VERSION: '5.15.2' # quotes required or YAML parser will interpret as float

jobs:

  build-test:
    # run job 'build-test' for open pull_request that hasn't been merged yet
    if: ( github.event.pull_request.merged == false )
    name: 'Create Qt build'
    runs-on: ubuntu-22.04

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: install build dependencies
        run: |  
          # ---------------------------------
          echo "-- install build dependencies --"
          sudo add-apt-repository universe
          sudo apt update
          sudo apt install -y libfuse2
          sudo apt install -y build-essential gettext git
          sudo apt install -y qttools5-dev libqt5xml5 libqt5svg5-dev libqt5xmlpatterns5-dev libdrm-dev
          sudo apt install -y '^libxcb.*-dev' libxcb-util-dev libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev

          # --------------------------------
          echo "-- install additional packages ---"
          sudo apt install -y nickle wish libgcrypt20 libjpeg-turbo8 liblz4-1 libpoppler118
          sudo apt install -y libsm6 libx11-xcb-dev libxau6 libxcb-render-util0 libxcb-sync1 libxcb-xinerama0 libxcb-xkb1 
          sudo apt install -y libxdmcp6 libxext6 libxfixes3 libxrender1 libxshmfence1 libxxf86vm1
          sudo apt install -y qt5-gtk-platformtheme qt5-image-formats-plugins qttranslations5-l10n qtwayland5

      - name: build Seamly2D & SeamlyMe
        run: |
          # *********************************
          echo "-- show current directory --"
          echo $PWD
          
          # *********************************
          echo "-- make Seamly2D & SeamlyMe --"
          mkdir /home/runner/local
          qmake PREFIX=/home/runner/local Seamly2D.pro CONFIG+=no_ccache
          make -j$(nproc) && make install

      - name: install test dependencies
        # xvfb use to test built application within a framebuffer
        run: |
          # *********************************
          echo "-- install test dependencies (xvfb) --"
          sudo apt update
          sudo apt install -y xvfb

      # run the tests
      - name: test Seamly2D.exe
        run: |
          # *********************************
          echo "-- test Seamly2D with xvfb --"
          export LD_LIBRARY_PATH=/home/runner/local/lib64/Seamly2D
          xvfb-run -a make --silent check TESTARGS="-silent"
